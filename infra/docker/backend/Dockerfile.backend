# ============================= BUILD STAGE =====================================
FROM node:20-alpine AS builder
WORKDIR /app
COPY backend/package*.json ./
RUN npm ci && npm cache clean --force
COPY backend/tsconfig.json ./tsconfig.json
COPY backend/prisma/ ./prisma/
COPY backend/src/ ./src/
RUN npx prisma generate
RUN npm run build || { \
        echo "Build failed. Check the logs above for errors."; \
        exit 1; \
    }

# ============================= PRODUCTION STAGE ==============================
FROM node:20-alpine
RUN addgroup -S nodejs && \
    adduser -S nodejs -G nodejs
WORKDIR /app
RUN apk add --no-cache \
    postgresql-client \
    openssl \
    curl
COPY backend/package*.json ./
RUN npm ci --production && \
    npm cache clean --force
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/prisma ./prisma
COPY --from=builder --chown=nodejs:nodejs /app/node_modules/.prisma ./node_modules/.prisma
RUN npx prisma generate
USER nodejs
HEALTHCHECK --interval=30s --timeout=3s --start-period=30s \
    CMD curl -f http://localhost:8000/api/health || exit 1
EXPOSE 8000
CMD ["node", "dist/server.js"] 