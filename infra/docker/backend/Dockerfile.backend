# ============================= BUILD STAGE =====================================
FROM node:20-alpine AS builder
RUN echo "------ Build Stage Started ------"
WORKDIR /app

# Copy package files first for better layer caching
COPY backend/package*.json ./
RUN echo "Dependencies - Installing..."
RUN npm ci --no-audit --no-fund && \
    npm cache clean --force
RUN echo "Dependencies - Installed"

# Copy source code and config
COPY backend/tsconfig.json ./tsconfig.json
COPY backend/prisma/ ./prisma/
COPY backend/src/ ./src/

RUN echo "Prisma - Generating client..."
RUN npx prisma generate
RUN echo "Prisma - Client generated"

RUN echo "TypeScript - Compiling..."
RUN NODE_OPTIONS=--max-old-space-size=2048 npm run build || { \
        echo "Build failed. Check the logs above for errors."; \
        exit 1; \
    }
RUN echo "TypeScript - Compiled"

# Clean up build dependencies
RUN rm -rf src tsconfig.json
RUN echo "------ Build Stage Finished ------"

# ============================= PRODUCTION STAGE ==============================
FROM node:20-alpine
RUN echo "------ Production Stage Started ------"

# Create non-root user
RUN addgroup -S nodejs && \
    adduser -S nodejs -G nodejs

WORKDIR /app

# Install system dependencies in single layer
RUN echo "System dependencies - Installing..." && \
    apk add --no-cache \
        postgresql-client \
        openssl \
        curl && \
    echo "System dependencies - Installed"

# Copy package files and install production dependencies
COPY backend/package*.json ./
RUN echo "Dependencies - Installing for production..." && \
    npm ci --omit=dev --no-audit --no-fund && \
    npm cache clean --force && \
    echo "Dependencies - Installed"

# Copy built application and necessary files
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/prisma ./prisma
COPY --from=builder --chown=nodejs:nodejs /app/node_modules/.prisma ./node_modules/.prisma

# Generate Prisma client for production
RUN echo "Prisma - Generating client for production..." && \
    npx prisma generate && \
    echo "Prisma - Client generated"

# Switch to non-root user
USER nodejs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/api/health || exit 1

EXPOSE 8000
CMD ["node", "dist/server.js"]
RUN echo "------ Production Stage Finished ------" 