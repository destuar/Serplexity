# ============================= BUILD STAGE =====================================
FROM node:20-alpine AS builder
RUN echo "------ Build Stage Started ------"
WORKDIR /app

# Copy package files first for better layer caching
COPY frontend/package*.json ./
RUN echo "Dependencies - Installing..."
RUN npm ci --no-audit --no-fund && \
    npm cache clean --force
RUN echo "Dependencies - Installed"

# Copy source code
COPY frontend/. ./

# Set production environment variables for build
ENV VITE_API_URL=/api
ENV NODE_OPTIONS=--max-old-space-size=2048

RUN echo "Application - Building..."
RUN npm run build
RUN echo "Application - Built"

# Clean up unnecessary files but keep dist
RUN rm -rf node_modules src public *.json *.config.* *.md
RUN echo "------ Build Stage Finished ------"

# ============================= PRODUCTION STAGE ==============================
FROM nginx:alpine-slim
RUN echo "------ Production Stage Started ------"

# Copy built assets
COPY --from=builder /app/dist /usr/share/nginx/html
COPY infra/docker/frontend/frontend-nginx.conf /etc/nginx/conf.d/default.conf

# Add health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s \
    CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
RUN echo "------ Production Stage Finished ------"